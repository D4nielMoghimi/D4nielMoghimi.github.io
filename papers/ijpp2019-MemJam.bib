@Article{moghimi2019memjam,
author="Moghimi, Ahmad
and Wichelmann, Jan
and Eisenbarth, Thomas
and Sunar, Berk",
title="MemJam: A False Dependency Attack Against Constant-Time Crypto Implementations",
journal="International Journal of Parallel Programming",
year="2019",
month="Aug",
day="01",
volume="47",
number="4",
pages="538--570",
abstract="Cache attacks exploit memory access patterns of cryptographic implementations. Constant-time implementation techniques have become an indispensable tool in fighting cache timing attacks. These techniques engineer the memory accesses of cryptographic operations to follow a uniform key independent pattern. However, the constant-time behavior is dependent on the underlying architecture, which can be highly complex and often incorporates unpublished features. The CacheBleed attack targets cache bank conflicts and thereby invalidates the assumption that microarchitectural side-channel adversaries can only observe memory with cache line granularity. In this work, we propose MemJam, which utilizes 4K Aliasing to establish a side-channel attack that exploits false dependency of memory read-after-write events and provides a high quality intra cache line timing channel. As a proof of concept, we demonstrate the first key recovery attacks on constant-time implementations of all symmetric block ciphers supported in the current intel integrated performance primitives (Intel IPP) cryptographic library: triple DES, AES and SM4. Further, we demonstrate the first intra cache level timing attack on SGX by reproducing the AES key recovery results on an enclave that performs encryption using the aforementioned constant-time implementation of AES. Our results show that we can not only use this side channel to efficiently attack memory dependent cryptographic operations but also to bypass proposed protections. Compared to CacheBleed, which is limited to older processor generations, MemJamÂ is the first intra cache level attack applicable to all major Intel processors including the latest generations and also applies to the SGX extension.",
issn="1573-7640",
doi="10.1007/s10766-018-0611-9",
url="https://doi.org/10.1007/s10766-018-0611-9"
}

